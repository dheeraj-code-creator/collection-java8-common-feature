
Git configuration:
========================================================================
git config --global user.name "Dheeraj Kumar"
git config --global user.email "dheeraj.kumar@partner.bmw.in"

#########################################################################

Intellij shortcuts:
========================================================================
.iml file = module file (used to combine different frameworks)
.idea folder = configuration directory (configuration about the project ex: VCS history etc)
ctrl+shift+N = find java files 
ctrl+Alt+O = removed usused imports
ctrl+X = deletes whole line 
shift+f6 = change variable names
func + F8 = next line
func + F7 = inside the method
func + F9 = resume
Alt + F8 = evaluate expression
Alt + Enter = assign to local variable

ctrl+Alt+L = format code
ctrl+Alt+M = extracts method
ctrl+Alt+Y = refresh


ctrl+shift+/ = comment or uncomment multiple lines
ctrl+/       = comment or uncomment single line
ctrl+shift+F = find/search
ctrl+shift+R = Replace

VM = -Dspring.profiles.active=dev

##########################################################################

Quarkus commands:
==========================================================================
application.properties
	quarkus.http.port=9002

maven compile and run command from IDE	
	compile quarkus:dev
	
maven compile and run command from cmd
	mvn compile quarkus:dev
	
building jar file to deploy on AWS
	stop the application and do mvn clean install
	
##########################################################################

AWS SAM cli commands:
==========================================================================	
1) Download sam cli
2) open cmd prompt and type: aws configure
3) provide secret keys
4) goto your project directory target path	
5) use below Sam cli command
	sam deploy -t target\sam.jvm.yaml -g
	
##########################################################################

AWS comman commands:
==========================================================================

To remove credentials from EC2
ls ~/.aws
rm ~/.aws/config
rm ~/.aws/credentials

aws s3 ls
aws s3 ls bucket-name
mkdir /app
cd /app
aws s3 cp s3://ec2-s3-example/ur jar name .

sudo netstat -plten |grep java
kill -9 processId

curl -X GET http://localhost:8080/allUser

sudo su
yum update -y
yum install httpd
systemctl start httpd
systemctl enable httpd
echo "Hello World" > /var/www/html/index.html
 
curl http://169.254.169.254/latest/meta-data
curl http://169.254.169.254/latest/meta-data/ami-id
curl http://169.254.169.254/latest/meta-data/hostname
curl http://169.254.169.254/latest/meta-data/instance-id
curl http://169.254.169.254/latest/meta-data/instance-type
 
curl http://169.254.169.254/latest/dynamic
curl http://169.254.169.254/latest/dynamic/instance-identity
curl http://169.254.169.254/latest/dynamic/instance-identity/document
 
curl -s http://169.254.169.254/latest/dynamic/instance-identity/document > /var/www/html/index.html

###############################################################################

sonar excluison in pom:
===============================================================================
    <properties>
        <sonar.coverage.exclusions>**/LambdaFunction.java</sonar.coverage.exclusions>
    </properties>
	
###############################################################################

Cloud watch query commands:
===============================================================================

filter @message like /OpenSearchException/ # same filter the CW alarm uses
| filter @message like /DCS/ # this schema is broken anyways
| filter @message not like /bmw.esocrm.EndCustomer.v1/ # this schema is broken anyways
| sort @timestamp desc

filter @message like /OpenSearchException/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /Exception/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /DVSES-SC-002/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /DVSES-PO-003/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /bmw.dvssdcstradein.TradeInInteraction.v1+4+0000029828.json/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /DVSES-SC-005/ # same filter the CW alarm uses
| filter @message not like /DCSUserInteraction/ # this schema is broken anyways
| sort @timestamp desc

filter @message like /bmw.dvssdcs.DCSUserInteraction.v1+5+0000454915.json/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /DVSES-PT-011/ # same filter the CW alarm uses
| filter @message not like /extraneous key \[javaType\] is not permitted/ # known bug DVSAN-2310
| filter @message not like /order_cancel_confirmed.schema.json/ # this schema is broken anyways
| sort @timestamp desc

filter @message like /Deperso Lambda Execution Invoked/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /ERROR/ # same filter the CW alarm uses
| sort @timestamp desc

filter @message like /ERROR/ # same filter the CW alarm uses
| sortÂ @timestamp desc

################################################################################

Opensearch/Elasticsearch Kibana query:
================================================================================
GET /_cat/indices?v

GET /_cat/indices?h=index

GET /dvs-es-gcdm.2023.118/_search

GET /dvs-es-trade-in.2023.114/_search
{
  "query": {
    "match": {
      "vehicleValuationId":"7eecb721-e077-4805-9185-a9e626beedd2"
    }
  }
}	


GET /dvs-es-trade-in.2023.114/_search
{
    "query": {
        "bool": {
            "must": [
                {"match": {
                  "vehicleValuationId": "7eecb721-e077-4805-9185-a9e626beedd2"
                  
                }},
                {"match": {
                  "type": "TRADE_IN_MODIFIED"
                  
                }}
            ]
        }
    }
}

GET /dvs-es-trade-in*/_search
{
    "query": {
        "bool": {
            "must": [
                {"match": {
                  "vehicleValuationId": "7eecb721-e077-4805-9185-a9e626beedd2"
                  
                }},
                {"match": {
                  "event.data.vehicleValuation.valuationDate": "2023-04-24T11:35:26.115Z"
                  
                }}
            ]
        }
    }
}


############################################################################

kill port no
netstat -ano | findstr :8080
taskkill /PID portno. /F


############################################################################
               Performance appraisal points
############################################################################

Quality of Delivery:
1. Ensure timely completion of all deliverables with accuracy in implementation.
2. More than 80% code coverage in integration and system testing
3. Institutionalize tools for productivity & quality
4. Usage of static code analyzers, security analyzers
5. Minimize build failures due to integration issues and challenges
 
Customer Satisfaction: 
1. Higher Customer Satisfaction with 0 customer complaints.
2. Project CSS of 85% and more.
 
Learning, Self-Development and Soft-skills
1.	Mentoring the next level of Technology experts and help them in their journey
2.	Learn at least 2 new relevant technologies, language, frameworks and demonstrate expertise in them through certifications or project deliverables (relevant to the project)
 
 
Design Goals
1. No more than 3 high / critical severity review comments in design reviews per module .
2. No more than 5% rework as a result of design inaccuracy and integration inaccuracy with other modules .
3. No more than 3% rework as a result of internals application design or development within the module
 
 
Personal Effectiveness:
1. Limit schedule variance to between +/- 5% with respect to the baseline plan, for the assigned functionalities
2. Proactively report any effort variance foreseen, accurately to the leads	

	  

#############################################################

DB Queries

SELECT COUNT(DISTINCT container.equipmentNumber) as continerOnWater  
          FROM GISRefDataMgmt.CTContainerLineItems lineitems,  GISRefDataMgmt.CTContainers container  
          WHERE distributionCenter IN (?)  
                AND lineitems.journeyid = container.journeyid  
                AND lineitems.equipmentNumber = container.equipmentNumber  
                AND container.eta IS NOT NULL  
                AND container.ata IS NULL  
                AND container.deliveryFlag = 'N'  
              UNION ALL   
          SELECT COUNT(DISTINCT container.equipmentNumber) as availableAtPort  
          FROM GISRefDataMgmt.CTContainerLineItems lineitems,  GISRefDataMgmt.CTContainers container   
          WHERE distributionCenter IN (?)  
                AND lineitems.journeyid = container.journeyid  
                AND lineitems.equipmentNumber = container.equipmentNumber  
                AND container.ata IS NOT NULL  
                AND container.atainlandTerminal IS NULL  
                AND container.deliveryFlag = 'N'  
              UNION ALL   
          SELECT COUNT(DISTINCT container.equipmentNumber) as customsBlocked  
          FROM GISRefDataMgmt.CTContainerLineItems lineitems,  GISRefDataMgmt.CTContainers container  
          WHERE distributionCenter IN ('SEF','UFF')  
                AND lineitems.journeyid = container.journeyid  
                AND lineitems.equipmentNumber = container.equipmentNumber  
                AND container.customscode IS NOT NULL  
                AND (container.deliveryFlag = 'N' OR container.deliveryFlag IS NULL ) ; 
              UNION ALL   
          SELECT COUNT(DISTINCT container.equipmentNumber) as availableAtInlandTerminal  
          FROM GISRefDataMgmt.CTContainerLineItems lineitems,  GISRefDataMgmt.CTContainers container  
          WHERE distributionCenter IN (?)  
                AND lineitems.journeyid = container.journeyid  
                AND lineitems.equipmentNumber = container.equipmentNumber  
                AND container.atainlandTerminal IS NOT NULL  
                AND container.deliveryFlag = 'N';
               
 
**************************************************************************************

             
 SELECT COUNT(DISTINCT container.equipmentNumber) as continerOnWater  
          FROM  GISRefDataMgmt.CTContainers container
          WHERE container.distributionCenters IN ('UFF','SEF')    
                AND container.eta IS NOT NULL  
                AND container.ata IS NULL
                AND container.atainlandTerminal IS NULL
                AND (container.deliveryFlag = 'N' OR container.deliveryFlag IS NULL )
                 UNION ALL   
 SELECT COUNT(DISTINCT container.equipmentNumber) as availableAtPort  
          FROM  GISRefDataMgmt.CTContainers container   
          WHERE container.distributionCenters IN ('UFF','SEF')   
                AND container.ata IS NOT NULL  
                AND container.atainlandTerminal IS NULL  
                AND (container.deliveryFlag = 'N' OR container.deliveryFlag IS NULL )  
              UNION ALL   
SELECT COUNT(DISTINCT container.equipmentNumber) as customsBlocked  
          FROM  GISRefDataMgmt.CTContainers container
          WHERE container.distributionCenters IN ('UFF','SEF') 
                AND container.customscode IS NOT NULL  
                AND (container.deliveryFlag = 'N' OR container.deliveryFlag IS NULL )
              UNION ALL   
SELECT COUNT(DISTINCT container.equipmentNumber) as availableAtInlandTerminal  
          FROM  GISRefDataMgmt.CTContainers container  
          WHERE container.distributionCenters IN ('UFF','SEF')    
                AND container.atainlandTerminal IS NOT NULL  
                AND (container.deliveryFlag = 'N' OR container.deliveryFlag IS NULL ) ; 

#########################################
               
SELECT * from GISDataMgmt.IBContainers WHERE uploadCycle ='2024-18' AND flow IN ('SEF');               

#########################################

SELECT COALESCE(WEEK(inWeek), inWeek) As week_number, 
COUNT(*) As total  
from GISDataMgmt.IBContainers WHERE uploadCycle ='2024-5' AND flow IN ('SEF')
GROUP BY week_number ;

#########################################

SELECT container.*, lineitems.* 
FROM GISRefDataMgmt.CTContainerLineItems lineitems,  GISRefDataMgmt.CTContainers container 
WHERE distributionCenter IN ('UFF') 
      AND lineitems.journeyid = container.journeyid
      AND lineitems.equipmentNumber = container.equipmentNumber;
    -- AND container.customsflag = '';
     
#########################################     
     
INSERT INTO GISRefDataMgmt.CTContainers 
(equipmentNumber, carrier, vessel, voyage, totalcartons, totalunits, weight, volume, pod, eta, creationDate, createdBy, size)
    values ('101c', '1cMSC', 'V1c', '1bVoyage', 11, 10, null, null, null, null, null, null , null);
   
#########################################   
   
INSERT INTO GISRefDataMgmt.CTContainerLineItems 
(equipmentNumber ,polineitem, journeyid, item, itemDescription, division, distributionCenter, billOfLading, createdBy, creationDate)
      VALUES ('101b','1bPOL',(select journeyid from GISRefDataMgmt.CTContainers WHERE equipmentNumber='101b' and voyage='1bVoyage'),
              'item1b', 'desc1b', 'dev1b', 'SEF', null, null, null);
             
#########################################
## container cannot delete ####
            
SELECT DISTINCT app.appointmentId ,app.equipmentNumber, app.appointmentStatus , container.deliveryFlag
  FROM GISDataMgmt.Appointments app, GISRefDataMgmt.CTContainers container
  WHERE container.equipmentNumber IN ('APHU6739376', 'CMAU3355272') 
  AND container.deliveryFlag = 'N'
  AND app.equipmentNumber = container.equipmentNumber
  AND app.appointmentStatus != 'Deleted';
 
######################################### 
 
UPDATE GISRefDataMgmt.CTContainers t1 SET t1.deleteFlag = 'DELETED', t1.voyage = CONCAT(t1.voyage,'_DEL'),
   t1.lastModifiedDate = NOW() 
   WHERE equipmentNumber IN ('XYZ12345', 'CMAU3407362'); 
  
#########################################   
  
UPDATE GISRefDataMgmt.CTContainerLineItems t1 SET t1.deleteFlag = 'DELETED', 
   t1.polineitem = CONCAT(t1.polineitem,'_DEL'),
   t1.lastModifiedDate = NOW() 
   WHERE equipmentNumber IN ('APHU6739376', 'CMAU3355272');  
  
#########################################  
  
SELECT container.*, lineitems.* FROM  GISRefDataMgmt.CTContainers container 
LEFT JOIN GISRefDataMgmt.CTContainerLineItems lineitems  ON container.journeyid  = lineitems.journeyid
WHERE container.deliveryFlag = 'N'
AND distributionCenters REGEXP ('SEF|UFF|Others');

#########################################

	  